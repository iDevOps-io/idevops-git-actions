---
apiVersion: v1
kind: ConfigMap
metadata:
  name: -=app_name=--configmap
  namespace: -=kubernetes_namespace=-
data:
  pre-stop.sh: |-
    #!/bin/bash
    set -o errexit
    set -o pipefail
    set -o nounset

    # Debug section
    exec 3>&1
    exec 4>&2

    # Load Libraries
    . /opt/bitnami/scripts/liblog.sh
    . /opt/bitnami/scripts/libpostgresql.sh
    . /opt/bitnami/scripts/librepmgr.sh

    # Auxiliary functions
    is_new_primary_ready() {
        return_value=1
        currenty_primary_node="$(repmgr_get_primary_node)"
        currenty_primary_host="$(echo $currenty_primary_node | awk '{print $1}')"

        info "$currenty_primary_host != $REPMGR_NODE_NETWORK_NAME"
        if [[ $(echo $currenty_primary_node | wc -w) -eq 2 ]] && [[ "$currenty_primary_host" != "$REPMGR_NODE_NETWORK_NAME" ]]; then
            info "New primary detected, leaving the cluster..."
            return_value=0
        else
            info "Waiting for a new primary to be available..."
        fi
        return $return_value
    }

    export MODULE="pre-stop-hook"

    if [[ "${BITNAMI_DEBUG}" == "true" ]]; then
        info "Bash debug is on"
    else
        info "Bash debug is off"
        exec 1>/dev/null
        exec 2>/dev/null
    fi

    # Load PostgreSQL & repmgr environment variables
    . /opt/bitnami/scripts/postgresql-env.sh

    postgresql_enable_nss_wrapper

    # Prepare env vars for managing roles
    primary_node="$(repmgr_get_primary_node)"
    primary_host="$(echo $primary_node | awk '{print $1}')"

    # Stop postgresql for graceful exit.
    postgresql_stop

    if [[ "$primary_host" == "$REPMGR_NODE_NETWORK_NAME" ]]; then
        info "Primary node need to wait for a new primary node before leaving the cluster"
        retry_while is_new_primary_ready 10 5
    else
        info "Standby node doesn't need to wait, leaving the cluster."
    fi

---
apiVersion: v1
kind: Service
metadata:
  name: -=app_name=--headless-svc
  namespace: -=kubernetes_namespace=-
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: postgresql
    port: -=port=-
    targetPort: postgresql
    protocol: TCP 
  selector:
    app: -=app_name=-
    
---
apiVersion: v1
kind: Secret
metadata:
  name: -=app_name=--secrets
  namespace: -=kubernetes_namespace=-
stringData:
  postgres-password: -=postgres_password=-
  repmgr-password: -=repmgr_password=-
  postgres-user: -=postgres_user=-
  postgres-db: -=postgres_db=-
  repmgr-user: -=repmgr_user=-
  repmgr-db: -=repmgr_db=-
  
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: -=app_name=-
  namespace: -=kubernetes_namespace=-
spec:
  serviceName: -=app_name=--headless-svc
  replicas: 3
  selector:
    matchLabels:
      app: -=app_name=-
  template:
    metadata:
      labels:
        app: -=app_name=-
    spec:
      securityContext:
        fsGroup: 1001
      imagePullSecrets:
      - name: -=docker_pull_secret=-
      containers:
        - name: -=app_name=-
          lifecycle:
            preStop:
              exec:
                command:
                  - /pre-stop.sh
          image: -=docker_org_name=-/-=image=-:-=image_tag=-
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          # Auxiliary vars to populate environment variables
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            # PostgreSQL configuration
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: -=app_name=--secrets
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: -=app_name=--secrets
                  key: postgres-password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: -=app_name=--secrets
                  key: postgres-db
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "true"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit, repmgr"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Repmgr configuration
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: REPMGR_UPGRADE_EXTENSION
              value: "no"
            - name: REPMGR_PGHBA_TRUST_ALL
              value: "yes"
            - name: REPMGR_MOUNTED_CONF_DIR
              value: "/bitnami/repmgr/conf"
            - name: REPMGR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REPMGR_PARTNER_NODES
              value: -=app_name=--0.-=app_name=--headless-svc.$(REPMGR_NAMESPACE).svc.cluster.local,-=app_name=--1.-=app_name=--headless-svc.$(REPMGR_NAMESPACE).svc.cluster.local,-=app_name=--2.-=app_name=--headless-svc.$(REPMGR_NAMESPACE).svc.cluster.local
            - name: REPMGR_PRIMARY_HOST
              value: "-=app_name=--0.-=app_name=--headless-svc.$(REPMGR_NAMESPACE).svc.cluster.local"
            - name: REPMGR_NODE_NAME
              value: "$(MY_POD_NAME)"
            - name: REPMGR_NODE_NETWORK_NAME
              value: "$(MY_POD_NAME).-=app_name=--headless-svc.$(REPMGR_NAMESPACE).svc.cluster.local"
            - name: REPMGR_LOG_LEVEL
              value: "NOTICE"
            - name: REPMGR_CONNECT_TIMEOUT
              value: "5"
            - name: REPMGR_RECONNECT_ATTEMPTS
              value: "3"
            - name: REPMGR_RECONNECT_INTERVAL
              value: "5"
            - name: REPMGR_USERNAME
                secretKeyRef:
                  name: -=app_name=--secrets
                  key: repmgr-user
            - name: REPMGR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: -=app_name=--secrets
                  key: repmgr-password
            - name: REPMGR_DATABASE
              valueFrom:
                secretKeyRef:
                  name: -=app_name=--secrets
                  key: repmgr-db
          ports:
            - name: postgresql
              containerPort: -=port=-
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - bash
                - -ec
                - 'PGPASSWORD=$POSTGRES_PASSWORD psql -w -U $(POSTGRES_USER) -d $(POSTGRES_DB) -h 127.0.0.1 -p 5432 -c "SELECT 1"'
            initialDelaySeconds: -=initial_delay=-
            periodSeconds: -=period_time=-
            timeoutSeconds: -=timeout_period=-
            successThreshold: -=success_threshold=-
            failureThreshold: -=failure_threshold=-
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - 'PGPASSWORD=$POSTGRES_PASSWORD psql -w -U $(POSTGRES_USER) -d $(POSTGRES_DB)  -h 127.0.0.1 -p 5432 -c "SELECT 1"'
            initialDelaySeconds: -=initial_delay=-
            periodSeconds: -=period_time=-
            timeoutSeconds: -=timeout_period=-
            successThreshold: -=success_threshold=-
            failureThreshold: -=failure_threshold=-
          volumeMounts:
            - name: data
              mountPath: -=mount_path=-
            - name: hooks-scripts
              mountPath: /pre-stop.sh
              subPath: pre-stop.sh
      volumes:
        - name: hooks-scripts
          configMap:
            name: -=app_name=--configmap
            defaultMode: 0755
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: -=disk_size=-