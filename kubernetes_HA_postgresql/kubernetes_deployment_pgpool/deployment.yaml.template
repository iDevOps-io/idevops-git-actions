---
apiVersion: v1
kind: Secret
metadata:
  name: -=app_name=--secrets
  namespace: -=kubernetes_namespace=-
data:
  admin-password: -=admin_password=-
  admin-user: -=admin_user=-
  
---
apiVersion: v1
kind: Service
metadata:
  name: -=app_name=--svc
  namespace: -=kubernetes_namespace=-
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: postgresql
      port: -=port=-
      targetPort: -=port=-
      protocol: TCP
      nodePort: null
  selector:
    app: -=app_name=-
    
---
apiVersion: v1
kind: Service
metadata:
  name: -=app_name=--svc-nodeport
  namespace: -=kubernetes_namespace=-
spec:
  type: NodePort
  sessionAffinity: None
  ports:
    - name: postgresql
      port: -=port=-
      nodePort: -=node_port=-
      targetPort: -=port=-
      protocol: TCP
  selector:
    app: -=app_name=-
    
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: -=app_name=-
  namespace: -=kubernetes_namespace=-
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: -=app_name=-
  template:
    metadata:
      labels: 
        app: -=app_name=-
    spec:          
      securityContext:
        fsGroup: 1001
      imagePullSecrets:
      - name: -=docker_pull_secret=-        
      containers:
        - name: -=app_name=-
          image: -=docker_org_name=-/-=image=-:-=image_tag=-
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "true"
            - name: PGPOOL_BACKEND_NODES
              value: 0:postgres-0.postgres-headless-svc:-=port=-,1:postgres-1.postgres-headless-svc:-=port=-,2:postgres-2.postgres-headless-svc:-=port=-
            - name: PGPOOL_SR_CHECK_USER
                secretKeyRef:
                  name: postgres-secrets
                  key: repmgr-user
            - name: PGPOOL_SR_CHECK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: repmgr-password
            - name: PGPOOL_SR_CHECK_DATABASE
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: postgres-db
            - name: PGPOOL_ENABLE_LDAP
              value: "no"
            - name: PGPOOL_POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: postgres-user
            - name: PGPOOL_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: postgresql-password
            - name: PGPOOL_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: -=app_name=--secrets
                  key: admin-user
            - name: PGPOOL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: -=app_name=--secrets
                  key: admin-password
            - name: PGPOOL_ENABLE_LOAD_BALANCING
              value: "yes"
            - name: PGPOOL_ENABLE_LOG_CONNECTIONS
              value: "no"
            - name: PGPOOL_ENABLE_LOG_HOSTNAME
              value: "yes"
            - name: PGPOOL_ENABLE_LOG_PER_NODE_STATEMENT
              value: "no"
            - name: PGPOOL_CHILD_LIFE_TIME
              value: "0"
            - name: PGPOOL_ENABLE_TLS
              value: "no"
          ports:
            - name: postgresql
              containerPort: -=port=-
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /opt/bitnami/scripts/pgpool/healthcheck.sh
            initialDelaySeconds: -=initial_delay=-
            periodSeconds: -=period_time=-
            timeoutSeconds: -=timeout_period=-
            successThreshold: -=success_threshold=-
            failureThreshold: -=failure_threshold=-
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - PGPASSWORD=${PGPOOL_POSTGRES_PASSWORD} psql -U "$(PGPOOL_POSTGRES_USERNAME)" -d "$(PGPOOL_SR_CHECK_DATABASE)" -h /opt/bitnami/pgpool/tmp -tA -c "SELECT 1" >/dev/null
            initialDelaySeconds: -=initial_delay=-
            periodSeconds: -=period_time=-
            timeoutSeconds: -=timeout_period=-
            successThreshold: -=success_threshold=-
            failureThreshold: -=failure_threshold=-