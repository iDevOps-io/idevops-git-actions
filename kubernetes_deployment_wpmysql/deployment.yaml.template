---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: -=app_name=-
  namespace: -=kubernetes_namespace=-
  labels:
    app: -=app_name=-
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
  selector:
    matchLabels:
      app: -=app_name=-
  template:
    metadata:
      labels:
        app: -=app_name=-
    spec:
      volumes:
      - name: -=app_name=-
        persistentVolumeClaim:
          claimName: -=app_name=-
      imagePullSecrets:
      - name: -=docker_pull_secret=-
      containers:
      - name:  -=app_name=-
        image: -=docker_org_name=-/-=image=-:-=image_tag=-
        env:
        - name: MYSQL_HOST
          value: -=MYSQL_HOST=-
        - name: MYSQL_DATABASE
          value: -=MYSQL_DATABASE=-
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: -=app_name=-
              key: MYSQL_PASSWORD
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: -=app_name=-
              key: MYSQL_USER
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: -=app_name=-
              key: MYSQL_ROOT_PASSWORD
        livenessProbe:
          tcpSocket:
            port: -=port=-
          initialDelaySeconds: 90
          periodSeconds: 90          
        ports:
        - name: portone
          containerPort: -=port=-

        volumeMounts:
        - mountPath: "/var/lib/mysql"
          name: -=app_name=-

---
apiVersion: v1
kind: Service
metadata:
  name: -=app_name=-
  namespace: -=kubernetes_namespace=-
spec:
  type: LoadBalancer
  selector:
    app: -=app_name=-
  ports:
    - name: portone
      port: -=port=-
      targetPort: -=port=-     
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: -=app_name=-
  name: -=app_name=-
  namespace: -=kubernetes_namespace=-
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: -=disk_size=-
  storageClassName: gp2

---
apiVersion: v1
kind: Secret
metadata:
  name: -=app_name=-
  namespace: -=kubernetes_namespace=-
stringData:
  MYSQL_USER: -=MYSQL_USER=-
  MYSQL_PASSWORD: -=MYSQL_PASSWORD=-
  MYSQL_ROOT_PASSWORD: -=MYSQL_ROOT_PASSWORD=-