---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: -=app_name=-
  namespace: -=kubernetes_namespace=-
  labels:
    app: -=app_name=-
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
  selector:
    matchLabels:
      app: -=app_name=-
  template:
    metadata:
      labels:
        app: -=app_name=-
    spec:
      volumes:
      - name: -=app_name=-
        persistentVolumeClaim:
          claimName: -=app_name=-
      imagePullSecrets:
      - name: -=docker_pull_secret=-
      containers:
      - name:  -=app_name=-
        image: -=docker_org_name=-/-=image=-:-=image_tag=-
        readinessProbe:
          tcpSocket:
            port: -=port=-
          initialDelaySeconds: 30
          periodSeconds: 60
        livenessProbe:
          tcpSocket:
            port: -=port=-
          initialDelaySeconds: 60
          periodSeconds: 90
        env:
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: -=app_name=--secret
                key: POSTGRES_DB
          - name: POSTGRES_USER
            value: admin
          - name: POSTGRES_USERNAME
            valueFrom:
              secretKeyRef:
                name: -=app_name=--secret
                key: POSTGRES_USERNAME                 
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: -=app_name=--secret
                key: POSTGRES_PASSWORD
        ports:
          - name: portone
            containerPort: -=port=-
        volumeMounts:
          - name: -=app_name=-
            mountPath: "/var/lib/postgresql/data"
            subPath: pgdata


---
apiVersion: v1
kind: Secret
metadata:
  name: -=app_name=--secret
  namespace: -=kubernetes_namespace=-
type: Opaque
stringData: 
  POSTGRES_DB: -=database_name=-
  POSTGRES_USERNAME: -=database_username=-
  POSTGRES_PASSWORD: -=database_password=-

---
apiVersion: v1
kind: Service
metadata:
  name: -=app_name=-
  namespace: -=kubernetes_namespace=-
spec:
  type: LoadBalancer
  selector:
    app: -=app_name=-
  ports:
    - name: portone
      port: -=port=-
      targetPort: -=port=-     

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: -=app_name=-
  name: -=app_name=-
  namespace: -=kubernetes_namespace=-
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: -=disk_size=-
  storageClassName: gp2

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    kubernetes.io/tls-acme: "true"
  name: -=app_name=-
  namespace: -=kubernetes_namespace=-
spec:
  ingressClassName: nginx
  rules:
  - host: -=hostname=-
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: -=app_name=-
            port: 
              number: -=port=-
  tls: 
  - hosts:
    - -=hostname=-
    secretName: -=app_name=--tls