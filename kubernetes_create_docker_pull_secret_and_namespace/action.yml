name: "Create namespace & Docker Pull Secret"
author: Evan Floyd <efloyd@idevops.io>
branding:
  icon: cloud
  color: gray-dark
description: Create namespace & Docker Pull Secret
inputs:
  namespace:
    description: Namespace for kubernetes.
    required: true
  docker_host_url:
    description: Host url for Docker.
    required: true
  docker_username:
    description: Docker Username in Docker Hub.
    required: true
  docker_password:
    description: Docker Password for Docker Hub Authentication (PAT)
    required: true
  docker_email:
    description: Email used for Docker.
    required: true
  docker_pull_secret:
    description: Adds a secret to grant access for pods to pull images from registry.
    required: true
  AWS_DEFAULT_REGION:
    description: Region you wish to use for AWS.
    required: true
  AWS_ACCESS_KEY_ID:
    description: Key used to access AWS.
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: Key used to access AWS secrets.
    required: true
runs:
  using: "composite"
  steps:
    - run: |
        #!/usr/bin/env bash
        function kubernetes_create_namespace {
        NAMESPACE=$1
        kubectl create namespace ${1} || echo "Namespace Exists"
        }

        function kubernetes_create_docker_secret {
        NAMESPACE=$1
        DOCKER_HOST_URL=$2
        DOCKER_USERNAME=$3
        DOCKER_PASSWORD=$4
        DOCKER_EMAIL=$5
        DOCKER_PULL_SECRET=$6
        EXISTS=

        kubectl create secret docker-registry ${INPUT_DOCKER_PULL_SECRET} \
        --docker-server="${INPUT_DOCKER_HOST_URL}" \
        --docker-username="${INPUT_DOCKER_USERNAME}" \
        --docker-password="${INPUT_DOCKER_PASSWORD}" \
        --docker-email="${INPUT_DOCKER_EMAIL}" \
        --namespace ${INPUT_NAMESPACE} || export EXISTS=yes

        if [ ! -z ${EXISTS} ]; then
        kubectl delete secret ${INPUT_DOCKER_PULL_SECRET} -n ${INPUT_NAMESPACE}
        kubectl create secret docker-registry ${INPUT_DOCKER_PULL_SECRET} \
        --docker-server="${INPUT_DOCKER_HOST_URL}" \
        --docker-username="${INPUT_DOCKER_USERNAME}" \
        --docker-password="${INPUT_DOCKER_PASSWORD}" \
        --docker-email="${INPUT_DOCKER_EMAIL}" \
        --namespace ${INPUT_NAMESPACE}
        fi
        }
      shell: bash