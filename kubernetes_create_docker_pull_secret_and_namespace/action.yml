name: "Create namespace & Docker Pull Secret"
author: Evan Floyd <efloyd@idevops.io>
branding:
  icon: cloud
  color: gray-dark
description: Create namespace & Docker Pull Secret
inputs:
  namespace:
    description: Namespace for kubernetes.
    required: true
  docker_host_url:
    description: Host url for Docker.
    required: true
  docker_username:
    description: Docker Username in Docker Hub.
    required: true
  docker_password:
    description: Docker Password for Docker Hub Authentication (PAT)
    required: true
  docker_pull_secret:
    description: Adds a secret to grant access for pods to pull images from registry.
    required: true
  kube_config_location:
    description: Location of the kubeconfig you want to use.
    default: "/home/runner/.kube/config"
    required: false
runs:
  using: "composite"
  steps:
    - run: |
        #!/usr/bin/env bash

        kubectl create namespace ${{ inputs.namespace }} --kubeconfig=${{ inputs.kube_config_location }} || echo "Namespace Exists"

        kubectl create secret docker-registry ${{ inputs.docker_pull_secret }} \
        --docker-server="${{ inputs.docker_host_url }}" \
        --docker-username="${{ inputs.docker_username }}" \
        --docker-password="${{ inputs.docker_password }}" \
        --namespace ${{ inputs.namespace }} --kubeconfig=${{ inputs.kube_config_location }} || export EXISTS=yes

        if [ ! -z "${EXISTS}" ]; then
          kubectl delete secret ${{ inputs.docker_pull_secret }} -n ${{ inputs.namespace }} --kubeconfig=${{ inputs.kube_config_location }}
          kubectl create secret docker-registry ${{ inputs.docker_pull_secret }} \
          --docker-server="${{ inputs.docker_host_url }}" \
          --docker-username="${{ inputs.docker_username }}" \
          --docker-password="${{ inputs.docker_password }}" \
          --namespace ${{ inputs.namespace }} --kubeconfig=${{ inputs.kube_config_location }}
        fi

      shell: bash